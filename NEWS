2017-05-27	Fix for possibly redundant __lbss fix in ia16-elf support.

		c++.common.inc :
		- conf__cxxc_probe_lbss_fix() now uses `int $0xe6' to force
		  an error exit from dosemu

		c.common.inc :
		- conf__cc_probe_lbss_fix() now uses `int $0xe6' to force
		  an error exit from dosemu

2017-05-25	"2 is not equal to 3 -- not even for large values of 2."  (4)

		c++.common.inc :
		- conf__cxxc_probe_func() now creates a function pointer to
		  ensure that the function is defined, not just declared

2017-05-14	"2 is not equal to 3 -- not even for large values of 2."  (3)

		execor.common.inc :
		- conf__find_execor() now chooses one of two dosemu wrapper
		  scripts

		dosemu-wrapper-1.sh :
		- new; uses `-q' switch in newer (bleeding-edge) dosemu

		dosemu-wrapper-2.sh :
		- renamed from dosemu-wrapper.sh

		c++.target.inc :
		- fixed bug: now detects target program name extension

2017-05-01	"2 is not equal to 3 -- not even for large values of 2."  (2)

		execor.common.inc :
		- now runs dosemu.bin via our own wrapper script

		dosemu-wrapper.sh :
		- new; passes `cpuemu vm86sim' to dosemu.bin to overcome a
		  "leavedos(Interp86|3056)" JIT bug

2017-04-30	"2 is not equal to 3 -- not even for large values of 2."

		configure.inc :
		- now records $conf_Cross_tag and $conf_Crosst_tag values in
		  config.cache

2017-04-28	Further beefed up Sourcery ia16-elf-gcc support.

		c++.inc ,
		c++.target.inc :
		- now handles ia16-elf platform when probing endianness
		- fixed bug in wchar_t type probing
		- now pipes stderr from test programs to /dev/null
		- added __lbss fix for ia16-elf

		c.inc ,
		c.target.inc :
		- now handles ia16-elf platform when probing endianness
		- now pipes stderr from test programs to /dev/null
		- added __lbss fix for ia16-elf

		c.common.inc ,
		c++.common.inc :
		- added __lbss fix for ia16-elf

		bfd.inc :
		- now specially handles ia16-elf platform

		configure.inc :
		- now always sets $conf_Lolwutconf_dir to an absolute path

		ia16-elf-strip.pl ,
		ia16-elf-lbss-fix.ld :
		- new

2017-04-15	Partial support for Sourcery ia16-elf-gcc.

		configure.inc :
		- added two command line options --host-exe-ext= and
		  --target-exe-ext=, and two configuration variables
		  $conf_Host_exe_ext and $conf_Target_exe_ext
		- conf__mktemp() now accepts an extension as a 2nd argument

		bfd.inc :
		- now uses $conf_Target_exe_ext
		- fixed typo

		c.inc ,
		c++.inc :
		- now sets and uses $conf_Host_exe_ext

		c.target.inc ,
		c++.target.inc :
		- now sets and uses $conf_Target_exe_ext

		c.common.inc ,
		c++.common.inc :
		- internal functions now take an extra $exeext argument

		execor.common.inc :
		- added conf__probe_exe_ext()
		- conf__find_execor() now handles ia16-elf host or target
		  specifier

2017-04-11	"Two heads are more numerous than one."  (2)

		bfd.inc :
		- main() -> main(void)

		c++.common.inc ,
		c++.inc ,
		c++.target.inc :
		- now uses <cstdio> rather than <iostream>

		c.inc ,
		c.target.inc :
		- now uses C rather than C++ (argh!)

2017-02-01	"Two heads are more numerous than one."

		escape.awk :
		- fixed handling of multiple underscores

2016-11-25	"The number of arguments is unimportant unless some of them
		 are correct."  (6)

		c++.common.inc :
		- generalized conf__cxxc_probe_opt_fno_integrated_as() into
		  conf__cxxc_probe_opt()

		c++.inc ,
		c++.target.inc :
		- added routines to test for `-fwritable-strings' support
		- now use conf__cxxc_probe_opt()

2016-11-08	"The number of arguments is unimportant unless some of them
		 are correct."  (5)

		configure.inc :
		- now includes $conf_Lolwutconf_dir in list of used variables

2016-11-07	"The number of arguments is unimportant unless some of them
		 are correct."  (4)

		configure.inc :
		- may now be invoked from the current directory even if the
		  source directory is separate

2016-10-11	"The number of arguments is unimportant unless some of them
		 are correct."  (3)

		bfd.inc :
		- refactored
		- added conf_bfd_strip_probe_opt_strip_all()
		- tweaked for correct operation in help mode

2016-10-09	"The number of arguments is unimportant unless some of them
		 are correct."  (2)

		bfd.inc :
		- added conf_bfd_chk_strip() and conf_bfd_strip_probe_opt_
		  strip_unneeded
		- now uses C compiler rather than C++ compiler to test for
		  libbfd existence

		c.target.inc ,
		c++.target.inc :
		- removed unneeded `local' statements

2016-10-08	"The number of arguments is unimportant unless some of them
		 are correct."

		app.build.inc :
		- renamed from app.inc
		- conf_app_chk_exists() -> conf_appb_chk_exists(), plus it
		  caches the test result in a different variable
		- added conf_appb_probe_exists()

2016-10-05	Some support for C, hopefully.  (2)

		c.target.inc :
		- added conf_ct_probe_dyn_ld()

		c++.target.inc :
		- tweaked informational messages

2016-10-02	Some support for C, hopefully.

		c.common.inc ,
		c.inc ,
		c.target.inc :
		- new

		c++.target.inc :
		- tweaked conf_cxxt_chk_compiler_and_executor() so the help
		  messages show it as possibly depending on host settings
		  CXX, CXXFLAGS, etc.
		- tweaked message for conf_cxxt_probe_lib()

		configure.inc :
		- rather major changes to conf__help()

2016-09-28	Yet more minor tweaks.

		c++.inc ,
		c++.target.inc :
		- tweaked informational messages

2016-09-23	_Really_ properly support separate source and build
		directories.

		configure.inc :
		- now determines $conf_Srcdir based on location of $0

		lolwutconf.mk :
		- now adds two `-I...' flags to $(CPPFLAGS) and $(CPPFLAGS_
		  FOR_TARGET) if source and build directories differ

2016-09-06	More minor tweaks.

		c++.common.inc :
		- no longer says `template<>' when testing for C++ function

		c++.inc :
		- tweaked informational message

2016-09-03	Minor tweaks.

		c++.common.inc :
		- tweaked informational messages

		bfd.inc :
		- split up conf_bfd_chk_exists() into two parts

		execor.common.inc :
		- removed superfluous conf__find_good_runtime_prefix() call

2016-08-28	"Xerox never comes up with anything original."  (3)

		execor.common.inc :
		- new

		c++.common.inc :
		- conf__cxxc_find_execor() now requires one extra argument
		- factored out executor-finding logic into execor.common.inc

		c++.inc ,
		c++.target.inc :
		- changed to fit new conf__cxxc_find_execor()

		configure.inc :
		- renamed arguments to conf__find_good_runtime_prefix() --
		  to generalize them

2016-08-25	"Xerox never comes up with anything original."  (2)

		c++.target.inc :
		- conf_cxxt_probe_impld_func() and others now redirect
		  outputs of test programs to /dev/null

2016-08-12	"Xerox never comes up with anything original."

		bfd.inc :
		- initial version

2016-07-31	"We are on the verge: Today our program proved Fermat's
		next-to-last theorem."

		configure.inc :
		- added $SHELL to list of used environment variables
		- --help now no longer gives help pertaining to C++
		  compilation, if C++ compilation is not used
		- `--help' should return exit status 0, not 1

		c++.inc ,
		c++.target.inc :
		- fixed operation under help mode

		app.inc :
		- conf_app_chk_exists() now works properly in help mode

2016-07-30	"A watched clock never boils."  (3)

		app.inc :
		- fixed bugs

2016-07-28	"A watched clock never boils."  (2)

		c++.target.inc :
		- added conf_cxxt_chk_var_tpls()

2016-07-26	"A watched clock never boils."

		c++.inc :
		- added conf_cxx_chk_var_tpls()

2016-07-23	Check for -fno-integrated-as.

		c++.inc :
		- added functions to check for -fno-integrated-as support for
		  host and target
		- added conf_cxx_chk_lib()

		c++.common.inc ,
		c++.target.inc :
		- added functions to check for -fno-integrated-as support for
		  host and target

2016-07-21	Check for -wrapper, and a bit more.  (2)

		c++.common.inc :
		- fixed bug in conf__cxxc_probe_opt_wrapper() in token test

2016-07-20	Check for -wrapper, and a bit more.

		c++.inc :
		- fixed return status handling in conf__cxx_compile_prog()

		c++.target.inc :
		- fixed return status handling in conf__cxxt_compile_prog()
		- added conf_cxxt_probe_opt_wrapper()

		c++.common.inc :
		- added conf__cxxc_probe_opt_wrapper(), used by c++.target.inc

		configure :
		- added `chmod' to list of programs to check for

2016-07-19	"With your bare hands?!?"

		c++.inc :
		- added conf_cxx_chk_typ_1_of()
		- tweaked error message for conf_cxx_chk_typ()

		c++.target.inc :
		- added conf_cxxt_chk_typ_1_of()
		- tweaked error message for conf_cxxt_chk_typ()

2016-07-16	Values of constants.  (2)

		c++.target.inc :
		- fixed bugs in conf_cxxt_probe_const_val()

2016-07-15	Values of constants.

		c++.target.inc :
		- added conf_cxxt_probe_const_val()

2016-07-12	"Don't panic."

		configure.inc :
		- now checks if running under `bash' in POSIX mode
		- fixed list of environment variables for `--help'

		c++.inc :
		- added conf_cxx_probe_asm_goto()
		- fixed conf_cxx_chk_typ() to not depend on the exit status
		  of conf_cxx_probe_typ() (which should always be 0)
		- tweaked conf_cxx_probe_typ() to use `eval' a bit less

		c++.target.inc :
		- added conf_cxxt_probe_asm_goto()
		- fixed conf_cxxt_chk_typ()

		escape.awk :
		- now escapes ` ' character as `_b'

2016-07-06	"There's no sense in trying to learn Martian over the phone."

		app.inc :
		- initial version

		escape.awk :
		- now special-cases `+' and `-'

2016-07-01	Now unambiguously "escapes" C++ names embedded in shell
		variable names.

		escape.awk :
		- initial version

		configure.inc :
		- added conf__escape(), which uses escape.awk

		c++.inc ,
		c++.target.inc :
		- now uses conf__escape()

2016-05-22	Target-side constants.

		c++.target.inc :
		- added conf_cxxt_probe_const()

2016-05-21	Target-side functions.

		c++.common.inc :
		- added conf__cxxc_probe_func()

		c++.inc :
		- rewrote conf_cxx_probe_func() to use conf__cxxc_probe_func()

		c++.target.inc :
		- added conf_cxxt_probe_func() and conf_cxxt_probe_impld_func()

2016-05-01	More x86-32 CPU types recognized.

		c++.common.inc :
		- now recognizes a few more specific CPU types for x86-32
		- now also looks for `i686-*-g++' and `i386-*-g++', in
		  addition to `x86_64-*-g++', when compiling for x86-32

2016-03-27	Split from biting-pear GitHub repository.
